// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");

function accentHeight(v) {
  return /* Attribute */Block.__(1, [
            "",
            "accent-height",
            v
          ]);
}

function accelerate(v) {
  return /* Attribute */Block.__(1, [
            "",
            "accelerate",
            v
          ]);
}

function accumulate(v) {
  return /* Attribute */Block.__(1, [
            "",
            "accumulate",
            v
          ]);
}

function additive(v) {
  return /* Attribute */Block.__(1, [
            "",
            "additive",
            v
          ]);
}

function alphabetic(v) {
  return /* Attribute */Block.__(1, [
            "",
            "alphabetic",
            v
          ]);
}

function allowReorder(v) {
  return /* Attribute */Block.__(1, [
            "",
            "allowReorder",
            v
          ]);
}

function amplitude(v) {
  return /* Attribute */Block.__(1, [
            "",
            "amplitude",
            v
          ]);
}

function arabicForm(v) {
  return /* Attribute */Block.__(1, [
            "",
            "arabic-form",
            v
          ]);
}

function ascent(v) {
  return /* Attribute */Block.__(1, [
            "",
            "ascent",
            v
          ]);
}

function attributeName(v) {
  return /* Attribute */Block.__(1, [
            "",
            "attributeName",
            v
          ]);
}

function attributeType(v) {
  return /* Attribute */Block.__(1, [
            "",
            "attributeType",
            v
          ]);
}

function autoReverse(v) {
  return /* Attribute */Block.__(1, [
            "",
            "autoReverse",
            v
          ]);
}

function azimuth(v) {
  return /* Attribute */Block.__(1, [
            "",
            "azimuth",
            v
          ]);
}

function baseFrequency(v) {
  return /* Attribute */Block.__(1, [
            "",
            "baseFrequency",
            v
          ]);
}

function baseProfile(v) {
  return /* Attribute */Block.__(1, [
            "",
            "baseProfile",
            v
          ]);
}

function bbox(v) {
  return /* Attribute */Block.__(1, [
            "",
            "bbox",
            v
          ]);
}

function begin$prime(v) {
  return /* Attribute */Block.__(1, [
            "",
            "begin",
            v
          ]);
}

function bias(v) {
  return /* Attribute */Block.__(1, [
            "",
            "bias",
            v
          ]);
}

function by(v) {
  return /* Attribute */Block.__(1, [
            "",
            "by",
            v
          ]);
}

function calcMode(v) {
  return /* Attribute */Block.__(1, [
            "",
            "calcMode",
            v
          ]);
}

function capHeight(v) {
  return /* Attribute */Block.__(1, [
            "",
            "cap-height",
            v
          ]);
}

function class$prime(v) {
  return /* Attribute */Block.__(1, [
            "",
            "class",
            v
          ]);
}

function clipPathUnits(v) {
  return /* Attribute */Block.__(1, [
            "",
            "clipPathUnits",
            v
          ]);
}

function contentScriptType(v) {
  return /* Attribute */Block.__(1, [
            "",
            "contentScriptType",
            v
          ]);
}

function contentStyleType(v) {
  return /* Attribute */Block.__(1, [
            "",
            "contentStyleType",
            v
          ]);
}

function cx(v) {
  return /* Attribute */Block.__(1, [
            "",
            "cx",
            v
          ]);
}

function cy(v) {
  return /* Attribute */Block.__(1, [
            "",
            "cy",
            v
          ]);
}

function d(v) {
  return /* Attribute */Block.__(1, [
            "",
            "d",
            v
          ]);
}

function decelerate(v) {
  return /* Attribute */Block.__(1, [
            "",
            "decelerate",
            v
          ]);
}

function descent(v) {
  return /* Attribute */Block.__(1, [
            "",
            "descent",
            v
          ]);
}

function diffuseConstant(v) {
  return /* Attribute */Block.__(1, [
            "",
            "diffuseConstant",
            v
          ]);
}

function divisor(v) {
  return /* Attribute */Block.__(1, [
            "",
            "divisor",
            v
          ]);
}

function dur(v) {
  return /* Attribute */Block.__(1, [
            "",
            "dur",
            v
          ]);
}

function dx(v) {
  return /* Attribute */Block.__(1, [
            "",
            "dx",
            v
          ]);
}

function dy(v) {
  return /* Attribute */Block.__(1, [
            "",
            "dy",
            v
          ]);
}

function edgeMode(v) {
  return /* Attribute */Block.__(1, [
            "",
            "edgeMode",
            v
          ]);
}

function elevation(v) {
  return /* Attribute */Block.__(1, [
            "",
            "elevation",
            v
          ]);
}

function end$prime(v) {
  return /* Attribute */Block.__(1, [
            "",
            "end",
            v
          ]);
}

function exponent(v) {
  return /* Attribute */Block.__(1, [
            "",
            "exponent",
            v
          ]);
}

function externalResourcesRequired(v) {
  return /* Attribute */Block.__(1, [
            "",
            "externalResourcesRequired",
            v
          ]);
}

function filterRes(v) {
  return /* Attribute */Block.__(1, [
            "",
            "filterRes",
            v
          ]);
}

function filterUnits(v) {
  return /* Attribute */Block.__(1, [
            "",
            "filterUnits",
            v
          ]);
}

function format(v) {
  return /* Attribute */Block.__(1, [
            "",
            "format",
            v
          ]);
}

function from(v) {
  return /* Attribute */Block.__(1, [
            "",
            "from",
            v
          ]);
}

function fx(v) {
  return /* Attribute */Block.__(1, [
            "",
            "fx",
            v
          ]);
}

function fy(v) {
  return /* Attribute */Block.__(1, [
            "",
            "fy",
            v
          ]);
}

function g1(v) {
  return /* Attribute */Block.__(1, [
            "",
            "g1",
            v
          ]);
}

function g2(v) {
  return /* Attribute */Block.__(1, [
            "",
            "g2",
            v
          ]);
}

function glyphName(v) {
  return /* Attribute */Block.__(1, [
            "",
            "glyph-name",
            v
          ]);
}

function glyphRef(v) {
  return /* Attribute */Block.__(1, [
            "",
            "glyphRef",
            v
          ]);
}

function gradientTransform(v) {
  return /* Attribute */Block.__(1, [
            "",
            "gradientTransform",
            v
          ]);
}

function gradientUnits(v) {
  return /* Attribute */Block.__(1, [
            "",
            "gradientUnits",
            v
          ]);
}

function hanging(v) {
  return /* Attribute */Block.__(1, [
            "",
            "hanging",
            v
          ]);
}

function height(v) {
  return /* Attribute */Block.__(1, [
            "",
            "height",
            v
          ]);
}

function horizAdvX(v) {
  return /* Attribute */Block.__(1, [
            "",
            "horiz-adv-x",
            v
          ]);
}

function horizOriginX(v) {
  return /* Attribute */Block.__(1, [
            "",
            "horiz-origin-x",
            v
          ]);
}

function horizOriginY(v) {
  return /* Attribute */Block.__(1, [
            "",
            "horiz-origin-y",
            v
          ]);
}

function id(v) {
  return /* Attribute */Block.__(1, [
            "",
            "id",
            v
          ]);
}

function ideographic(v) {
  return /* Attribute */Block.__(1, [
            "",
            "ideographic",
            v
          ]);
}

function in$prime(v) {
  return /* Attribute */Block.__(1, [
            "",
            "in",
            v
          ]);
}

function in2(v) {
  return /* Attribute */Block.__(1, [
            "",
            "in2",
            v
          ]);
}

function intercept(v) {
  return /* Attribute */Block.__(1, [
            "",
            "intercept",
            v
          ]);
}

function k(v) {
  return /* Attribute */Block.__(1, [
            "",
            "k",
            v
          ]);
}

function k1(v) {
  return /* Attribute */Block.__(1, [
            "",
            "k1",
            v
          ]);
}

function k2(v) {
  return /* Attribute */Block.__(1, [
            "",
            "k2",
            v
          ]);
}

function k3(v) {
  return /* Attribute */Block.__(1, [
            "",
            "k3",
            v
          ]);
}

function k4(v) {
  return /* Attribute */Block.__(1, [
            "",
            "k4",
            v
          ]);
}

function kernelMatrix(v) {
  return /* Attribute */Block.__(1, [
            "",
            "kernelMatrix",
            v
          ]);
}

function kernelUnitLength(v) {
  return /* Attribute */Block.__(1, [
            "",
            "kernelUnitLength",
            v
          ]);
}

function keyPoints(v) {
  return /* Attribute */Block.__(1, [
            "",
            "keyPoints",
            v
          ]);
}

function keySplines(v) {
  return /* Attribute */Block.__(1, [
            "",
            "keySplines",
            v
          ]);
}

function keyTimes(v) {
  return /* Attribute */Block.__(1, [
            "",
            "keyTimes",
            v
          ]);
}

function lang(v) {
  return /* Attribute */Block.__(1, [
            "",
            "lang",
            v
          ]);
}

function lengthAdjust(v) {
  return /* Attribute */Block.__(1, [
            "",
            "lengthAdjust",
            v
          ]);
}

function limitingConeAngle(v) {
  return /* Attribute */Block.__(1, [
            "",
            "limitingConeAngle",
            v
          ]);
}

function local(v) {
  return /* Attribute */Block.__(1, [
            "",
            "local",
            v
          ]);
}

function markerHeight(v) {
  return /* Attribute */Block.__(1, [
            "",
            "markerHeight",
            v
          ]);
}

function markerUnits(v) {
  return /* Attribute */Block.__(1, [
            "",
            "markerUnits",
            v
          ]);
}

function markerWidth(v) {
  return /* Attribute */Block.__(1, [
            "",
            "markerWidth",
            v
          ]);
}

function maskContentUnits(v) {
  return /* Attribute */Block.__(1, [
            "",
            "maskContentUnits",
            v
          ]);
}

function maskUnits(v) {
  return /* Attribute */Block.__(1, [
            "",
            "maskUnits",
            v
          ]);
}

function mathematical(v) {
  return /* Attribute */Block.__(1, [
            "",
            "mathematical",
            v
          ]);
}

function max(v) {
  return /* Attribute */Block.__(1, [
            "",
            "max",
            v
          ]);
}

function media(v) {
  return /* Attribute */Block.__(1, [
            "",
            "media",
            v
          ]);
}

function method$prime(v) {
  return /* Attribute */Block.__(1, [
            "",
            "method",
            v
          ]);
}

function min(v) {
  return /* Attribute */Block.__(1, [
            "",
            "min",
            v
          ]);
}

function mode(v) {
  return /* Attribute */Block.__(1, [
            "",
            "mode",
            v
          ]);
}

function name(v) {
  return /* Attribute */Block.__(1, [
            "",
            "name",
            v
          ]);
}

function numOctaves(v) {
  return /* Attribute */Block.__(1, [
            "",
            "numOctaves",
            v
          ]);
}

function offset(v) {
  return /* Attribute */Block.__(1, [
            "",
            "offset",
            v
          ]);
}

function operator(v) {
  return /* Attribute */Block.__(1, [
            "",
            "operator",
            v
          ]);
}

function order(v) {
  return /* Attribute */Block.__(1, [
            "",
            "order",
            v
          ]);
}

function orient(v) {
  return /* Attribute */Block.__(1, [
            "",
            "orient",
            v
          ]);
}

function orientation(v) {
  return /* Attribute */Block.__(1, [
            "",
            "orientation",
            v
          ]);
}

function origin(v) {
  return /* Attribute */Block.__(1, [
            "",
            "origin",
            v
          ]);
}

function overlinePosition(v) {
  return /* Attribute */Block.__(1, [
            "",
            "overline-position",
            v
          ]);
}

function overlineThickness(v) {
  return /* Attribute */Block.__(1, [
            "",
            "overline-thickness",
            v
          ]);
}

function panose1(v) {
  return /* Attribute */Block.__(1, [
            "",
            "panose-1",
            v
          ]);
}

function path(v) {
  return /* Attribute */Block.__(1, [
            "",
            "path",
            v
          ]);
}

function pathLength(v) {
  return /* Attribute */Block.__(1, [
            "",
            "pathLength",
            v
          ]);
}

function patternContentUnits(v) {
  return /* Attribute */Block.__(1, [
            "",
            "patternContentUnits",
            v
          ]);
}

function patternTransform(v) {
  return /* Attribute */Block.__(1, [
            "",
            "patternTransform",
            v
          ]);
}

function patternUnits(v) {
  return /* Attribute */Block.__(1, [
            "",
            "patternUnits",
            v
          ]);
}

function pointOrder(v) {
  return /* Attribute */Block.__(1, [
            "",
            "point-order",
            v
          ]);
}

function points(v) {
  return /* Attribute */Block.__(1, [
            "",
            "points",
            v
          ]);
}

function pointsAtX(v) {
  return /* Attribute */Block.__(1, [
            "",
            "pointsAtX",
            v
          ]);
}

function pointsAtY(v) {
  return /* Attribute */Block.__(1, [
            "",
            "pointsAtY",
            v
          ]);
}

function pointsAtZ(v) {
  return /* Attribute */Block.__(1, [
            "",
            "pointsAtZ",
            v
          ]);
}

function preserveAlpha(v) {
  return /* Attribute */Block.__(1, [
            "",
            "preserveAlpha",
            v
          ]);
}

function preserveAspectRatio(v) {
  return /* Attribute */Block.__(1, [
            "",
            "preserveAspectRatio",
            v
          ]);
}

function primitiveUnits(v) {
  return /* Attribute */Block.__(1, [
            "",
            "primitiveUnits",
            v
          ]);
}

function r(v) {
  return /* Attribute */Block.__(1, [
            "",
            "r",
            v
          ]);
}

function radius(v) {
  return /* Attribute */Block.__(1, [
            "",
            "radius",
            v
          ]);
}

function refX(v) {
  return /* Attribute */Block.__(1, [
            "",
            "refX",
            v
          ]);
}

function refY(v) {
  return /* Attribute */Block.__(1, [
            "",
            "refY",
            v
          ]);
}

function renderingIntent(v) {
  return /* Attribute */Block.__(1, [
            "",
            "rendering-intent",
            v
          ]);
}

function repeatCount(v) {
  return /* Attribute */Block.__(1, [
            "",
            "repeatCount",
            v
          ]);
}

function repeatDur(v) {
  return /* Attribute */Block.__(1, [
            "",
            "repeatDur",
            v
          ]);
}

function requiredExtensions(v) {
  return /* Attribute */Block.__(1, [
            "",
            "requiredExtensions",
            v
          ]);
}

function requiredFeatures(v) {
  return /* Attribute */Block.__(1, [
            "",
            "requiredFeatures",
            v
          ]);
}

function restart(v) {
  return /* Attribute */Block.__(1, [
            "",
            "restart",
            v
          ]);
}

function result(v) {
  return /* Attribute */Block.__(1, [
            "",
            "result",
            v
          ]);
}

function rotate(v) {
  return /* Attribute */Block.__(1, [
            "",
            "rotate",
            v
          ]);
}

function rx(v) {
  return /* Attribute */Block.__(1, [
            "",
            "rx",
            v
          ]);
}

function ry(v) {
  return /* Attribute */Block.__(1, [
            "",
            "ry",
            v
          ]);
}

function scale(v) {
  return /* Attribute */Block.__(1, [
            "",
            "scale",
            v
          ]);
}

function seed(v) {
  return /* Attribute */Block.__(1, [
            "",
            "seed",
            v
          ]);
}

function slope(v) {
  return /* Attribute */Block.__(1, [
            "",
            "slope",
            v
          ]);
}

function spacing(v) {
  return /* Attribute */Block.__(1, [
            "",
            "spacing",
            v
          ]);
}

function specularConstant(v) {
  return /* Attribute */Block.__(1, [
            "",
            "specularConstant",
            v
          ]);
}

function specularExponent(v) {
  return /* Attribute */Block.__(1, [
            "",
            "specularExponent",
            v
          ]);
}

function speed(v) {
  return /* Attribute */Block.__(1, [
            "",
            "speed",
            v
          ]);
}

function spreadMethod(v) {
  return /* Attribute */Block.__(1, [
            "",
            "spreadMethod",
            v
          ]);
}

function startOffset(v) {
  return /* Attribute */Block.__(1, [
            "",
            "startOffset",
            v
          ]);
}

function stdDeviation(v) {
  return /* Attribute */Block.__(1, [
            "",
            "stdDeviation",
            v
          ]);
}

function stemh(v) {
  return /* Attribute */Block.__(1, [
            "",
            "stemh",
            v
          ]);
}

function stemv(v) {
  return /* Attribute */Block.__(1, [
            "",
            "stemv",
            v
          ]);
}

function stitchTiles(v) {
  return /* Attribute */Block.__(1, [
            "",
            "stitchTiles",
            v
          ]);
}

function strikethroughPosition(v) {
  return /* Attribute */Block.__(1, [
            "",
            "strikethrough-position",
            v
          ]);
}

function strikethroughThickness(v) {
  return /* Attribute */Block.__(1, [
            "",
            "strikethrough-thickness",
            v
          ]);
}

function string(v) {
  return /* Attribute */Block.__(1, [
            "",
            "string",
            v
          ]);
}

function style(v) {
  return /* Attribute */Block.__(1, [
            "",
            "style",
            v
          ]);
}

function surfaceScale(v) {
  return /* Attribute */Block.__(1, [
            "",
            "surfaceScale",
            v
          ]);
}

function systemLanguage(v) {
  return /* Attribute */Block.__(1, [
            "",
            "systemLanguage",
            v
          ]);
}

function tableValues(v) {
  return /* Attribute */Block.__(1, [
            "",
            "tableValues",
            v
          ]);
}

function target(v) {
  return /* Attribute */Block.__(1, [
            "",
            "target",
            v
          ]);
}

function targetX(v) {
  return /* Attribute */Block.__(1, [
            "",
            "targetX",
            v
          ]);
}

function targetY(v) {
  return /* Attribute */Block.__(1, [
            "",
            "targetY",
            v
          ]);
}

function textLength(v) {
  return /* Attribute */Block.__(1, [
            "",
            "textLength",
            v
          ]);
}

function title(v) {
  return /* Attribute */Block.__(1, [
            "",
            "title",
            v
          ]);
}

function to$prime(v) {
  return /* Attribute */Block.__(1, [
            "",
            "to",
            v
          ]);
}

function transform(v) {
  return /* Attribute */Block.__(1, [
            "",
            "transform",
            v
          ]);
}

function type$prime(v) {
  return /* Attribute */Block.__(1, [
            "",
            "type",
            v
          ]);
}

function u1(v) {
  return /* Attribute */Block.__(1, [
            "",
            "u1",
            v
          ]);
}

function u2(v) {
  return /* Attribute */Block.__(1, [
            "",
            "u2",
            v
          ]);
}

function underlinePosition(v) {
  return /* Attribute */Block.__(1, [
            "",
            "underline-position",
            v
          ]);
}

function underlineThickness(v) {
  return /* Attribute */Block.__(1, [
            "",
            "underline-thickness",
            v
          ]);
}

function unicode(v) {
  return /* Attribute */Block.__(1, [
            "",
            "unicode",
            v
          ]);
}

function unicodeRange(v) {
  return /* Attribute */Block.__(1, [
            "",
            "unicode-range",
            v
          ]);
}

function unitsPerEm(v) {
  return /* Attribute */Block.__(1, [
            "",
            "units-per-em",
            v
          ]);
}

function vAlphabetic(v) {
  return /* Attribute */Block.__(1, [
            "",
            "v-alphabetic",
            v
          ]);
}

function vHanging(v) {
  return /* Attribute */Block.__(1, [
            "",
            "v-hanging",
            v
          ]);
}

function vIdeographic(v) {
  return /* Attribute */Block.__(1, [
            "",
            "v-ideographic",
            v
          ]);
}

function vMathematical(v) {
  return /* Attribute */Block.__(1, [
            "",
            "v-mathematical",
            v
          ]);
}

function values(v) {
  return /* Attribute */Block.__(1, [
            "",
            "values",
            v
          ]);
}

function version(v) {
  return /* Attribute */Block.__(1, [
            "",
            "version",
            v
          ]);
}

function vertAdvY(v) {
  return /* Attribute */Block.__(1, [
            "",
            "vert-adv-y",
            v
          ]);
}

function vertOriginX(v) {
  return /* Attribute */Block.__(1, [
            "",
            "vert-origin-x",
            v
          ]);
}

function vertOriginY(v) {
  return /* Attribute */Block.__(1, [
            "",
            "vert-origin-y",
            v
          ]);
}

function viewBox(v) {
  return /* Attribute */Block.__(1, [
            "",
            "viewBox",
            v
          ]);
}

function viewTarget(v) {
  return /* Attribute */Block.__(1, [
            "",
            "viewTarget",
            v
          ]);
}

function width(v) {
  return /* Attribute */Block.__(1, [
            "",
            "width",
            v
          ]);
}

function widths(v) {
  return /* Attribute */Block.__(1, [
            "",
            "widths",
            v
          ]);
}

function x(v) {
  return /* Attribute */Block.__(1, [
            "",
            "x",
            v
          ]);
}

function xHeight(v) {
  return /* Attribute */Block.__(1, [
            "",
            "x-height",
            v
          ]);
}

function x1(v) {
  return /* Attribute */Block.__(1, [
            "",
            "x1",
            v
          ]);
}

function x2(v) {
  return /* Attribute */Block.__(1, [
            "",
            "x2",
            v
          ]);
}

function xChannelSelector(v) {
  return /* Attribute */Block.__(1, [
            "",
            "xChannelSelector",
            v
          ]);
}

function xlinkActuate(v) {
  return /* Attribute */Block.__(1, [
            "http://www.w3.org/1999/xlink",
            "xlink:actuate",
            v
          ]);
}

function xlinkArcrole(v) {
  return /* Attribute */Block.__(1, [
            "http://www.w3.org/1999/xlink",
            "xlink:arcrole",
            v
          ]);
}

function xlinkHref(v) {
  return /* Attribute */Block.__(1, [
            "http://www.w3.org/1999/xlink",
            "xlink:href",
            v
          ]);
}

function xlinkRole(v) {
  return /* Attribute */Block.__(1, [
            "http://www.w3.org/1999/xlink",
            "xlink:role",
            v
          ]);
}

function xlinkShow(v) {
  return /* Attribute */Block.__(1, [
            "http://www.w3.org/1999/xlink",
            "xlink:show",
            v
          ]);
}

function xlinkTitle(v) {
  return /* Attribute */Block.__(1, [
            "http://www.w3.org/1999/xlink",
            "xlink:title",
            v
          ]);
}

function xlinkType(v) {
  return /* Attribute */Block.__(1, [
            "http://www.w3.org/1999/xlink",
            "xlink:type",
            v
          ]);
}

function xmlBase(v) {
  return /* Attribute */Block.__(1, [
            "http://www.w3.org/XML/1998/namespace",
            "xml:base",
            v
          ]);
}

function xmlLang(v) {
  return /* Attribute */Block.__(1, [
            "http://www.w3.org/XML/1998/namespace",
            "xml:lang",
            v
          ]);
}

function xmlSpace(v) {
  return /* Attribute */Block.__(1, [
            "http://www.w3.org/XML/1998/namespace",
            "xml:space",
            v
          ]);
}

function y(v) {
  return /* Attribute */Block.__(1, [
            "",
            "y",
            v
          ]);
}

function y1(v) {
  return /* Attribute */Block.__(1, [
            "",
            "y1",
            v
          ]);
}

function y2(v) {
  return /* Attribute */Block.__(1, [
            "",
            "y2",
            v
          ]);
}

function yChannelSelector(v) {
  return /* Attribute */Block.__(1, [
            "",
            "yChannelSelector",
            v
          ]);
}

function z(v) {
  return /* Attribute */Block.__(1, [
            "",
            "z",
            v
          ]);
}

function zoomAndPan(v) {
  return /* Attribute */Block.__(1, [
            "",
            "zoomAndPan",
            v
          ]);
}

function alignmentBaseline(v) {
  return /* Attribute */Block.__(1, [
            "",
            "alignment-baseline",
            v
          ]);
}

function baselineShift(v) {
  return /* Attribute */Block.__(1, [
            "",
            "baseline-shift",
            v
          ]);
}

function clipPath(v) {
  return /* Attribute */Block.__(1, [
            "",
            "clip-path",
            v
          ]);
}

function clipRule(v) {
  return /* Attribute */Block.__(1, [
            "",
            "clip-rule",
            v
          ]);
}

function clip(v) {
  return /* Attribute */Block.__(1, [
            "",
            "clip",
            v
          ]);
}

function colorInterpolationFilters(v) {
  return /* Attribute */Block.__(1, [
            "",
            "color-interpolation-filters",
            v
          ]);
}

function colorInterpolation(v) {
  return /* Attribute */Block.__(1, [
            "",
            "color-interpolation",
            v
          ]);
}

function colorProfile(v) {
  return /* Attribute */Block.__(1, [
            "",
            "color-profile",
            v
          ]);
}

function colorRendering(v) {
  return /* Attribute */Block.__(1, [
            "",
            "color-rendering",
            v
          ]);
}

function color(v) {
  return /* Attribute */Block.__(1, [
            "",
            "color",
            v
          ]);
}

function cursor(v) {
  return /* Attribute */Block.__(1, [
            "",
            "cursor",
            v
          ]);
}

function direction(v) {
  return /* Attribute */Block.__(1, [
            "",
            "direction",
            v
          ]);
}

function display(v) {
  return /* Attribute */Block.__(1, [
            "",
            "display",
            v
          ]);
}

function dominantBaseline(v) {
  return /* Attribute */Block.__(1, [
            "",
            "dominant-baseline",
            v
          ]);
}

function enableBackground(v) {
  return /* Attribute */Block.__(1, [
            "",
            "enable-background",
            v
          ]);
}

function fillOpacity(v) {
  return /* Attribute */Block.__(1, [
            "",
            "fill-opacity",
            v
          ]);
}

function fillRule(v) {
  return /* Attribute */Block.__(1, [
            "",
            "fill-rule",
            v
          ]);
}

function fill(v) {
  return /* Attribute */Block.__(1, [
            "",
            "fill",
            v
          ]);
}

function filter(v) {
  return /* Attribute */Block.__(1, [
            "",
            "filter",
            v
          ]);
}

function floodColor(v) {
  return /* Attribute */Block.__(1, [
            "",
            "flood-color",
            v
          ]);
}

function floodOpacity(v) {
  return /* Attribute */Block.__(1, [
            "",
            "flood-opacity",
            v
          ]);
}

function fontFamily(v) {
  return /* Attribute */Block.__(1, [
            "",
            "font-family",
            v
          ]);
}

function fontSizeAdjust(v) {
  return /* Attribute */Block.__(1, [
            "",
            "font-size-adjust",
            v
          ]);
}

function fontSize(v) {
  return /* Attribute */Block.__(1, [
            "",
            "font-size",
            v
          ]);
}

function fontStretch(v) {
  return /* Attribute */Block.__(1, [
            "",
            "font-stretch",
            v
          ]);
}

function fontStyle(v) {
  return /* Attribute */Block.__(1, [
            "",
            "font-style",
            v
          ]);
}

function fontVariant(v) {
  return /* Attribute */Block.__(1, [
            "",
            "font-variant",
            v
          ]);
}

function fontWeight(v) {
  return /* Attribute */Block.__(1, [
            "",
            "font-weight",
            v
          ]);
}

function glyphOrientationHorizontal(v) {
  return /* Attribute */Block.__(1, [
            "",
            "glyph-orientation-horizontal",
            v
          ]);
}

function glyphOrientationVertical(v) {
  return /* Attribute */Block.__(1, [
            "",
            "glyph-orientation-vertical",
            v
          ]);
}

function imageRendering(v) {
  return /* Attribute */Block.__(1, [
            "",
            "image-rendering",
            v
          ]);
}

function kerning(v) {
  return /* Attribute */Block.__(1, [
            "",
            "kerning",
            v
          ]);
}

function letterSpacing(v) {
  return /* Attribute */Block.__(1, [
            "",
            "letter-spacing",
            v
          ]);
}

function lightingColor(v) {
  return /* Attribute */Block.__(1, [
            "",
            "lighting-color",
            v
          ]);
}

function markerEnd(v) {
  return /* Attribute */Block.__(1, [
            "",
            "marker-end",
            v
          ]);
}

function markerMid(v) {
  return /* Attribute */Block.__(1, [
            "",
            "marker-mid",
            v
          ]);
}

function markerStart(v) {
  return /* Attribute */Block.__(1, [
            "",
            "marker-start",
            v
          ]);
}

function mask(v) {
  return /* Attribute */Block.__(1, [
            "",
            "mask",
            v
          ]);
}

function opacity(v) {
  return /* Attribute */Block.__(1, [
            "",
            "opacity",
            v
          ]);
}

function overflow(v) {
  return /* Attribute */Block.__(1, [
            "",
            "overflow",
            v
          ]);
}

function pointerEvents(v) {
  return /* Attribute */Block.__(1, [
            "",
            "pointer-events",
            v
          ]);
}

function shapeRendering(v) {
  return /* Attribute */Block.__(1, [
            "",
            "shape-rendering",
            v
          ]);
}

function stopColor(v) {
  return /* Attribute */Block.__(1, [
            "",
            "stop-color",
            v
          ]);
}

function stopOpacity(v) {
  return /* Attribute */Block.__(1, [
            "",
            "stop-opacity",
            v
          ]);
}

function strokeDasharray(v) {
  return /* Attribute */Block.__(1, [
            "",
            "stroke-dasharray",
            v
          ]);
}

function strokeDashoffset(v) {
  return /* Attribute */Block.__(1, [
            "",
            "stroke-dashoffset",
            v
          ]);
}

function strokeLinecap(v) {
  return /* Attribute */Block.__(1, [
            "",
            "stroke-linecap",
            v
          ]);
}

function strokeLinejoin(v) {
  return /* Attribute */Block.__(1, [
            "",
            "stroke-linejoin",
            v
          ]);
}

function strokeMiterlimit(v) {
  return /* Attribute */Block.__(1, [
            "",
            "stroke-miterlimit",
            v
          ]);
}

function strokeOpacity(v) {
  return /* Attribute */Block.__(1, [
            "",
            "stroke-opacity",
            v
          ]);
}

function strokeWidth(v) {
  return /* Attribute */Block.__(1, [
            "",
            "stroke-width",
            v
          ]);
}

function stroke(v) {
  return /* Attribute */Block.__(1, [
            "",
            "stroke",
            v
          ]);
}

function textAnchor(v) {
  return /* Attribute */Block.__(1, [
            "",
            "text-anchor",
            v
          ]);
}

function textDecoration(v) {
  return /* Attribute */Block.__(1, [
            "",
            "text-decoration",
            v
          ]);
}

function textRendering(v) {
  return /* Attribute */Block.__(1, [
            "",
            "text-rendering",
            v
          ]);
}

function unicodeBidi(v) {
  return /* Attribute */Block.__(1, [
            "",
            "unicode-bidi",
            v
          ]);
}

function visibility(v) {
  return /* Attribute */Block.__(1, [
            "",
            "visibility",
            v
          ]);
}

function wordSpacing(v) {
  return /* Attribute */Block.__(1, [
            "",
            "word-spacing",
            v
          ]);
}

function writingMode(v) {
  return /* Attribute */Block.__(1, [
            "",
            "writing-mode",
            v
          ]);
}

exports.accentHeight = accentHeight;
exports.accelerate = accelerate;
exports.accumulate = accumulate;
exports.additive = additive;
exports.alphabetic = alphabetic;
exports.allowReorder = allowReorder;
exports.amplitude = amplitude;
exports.arabicForm = arabicForm;
exports.ascent = ascent;
exports.attributeName = attributeName;
exports.attributeType = attributeType;
exports.autoReverse = autoReverse;
exports.azimuth = azimuth;
exports.baseFrequency = baseFrequency;
exports.baseProfile = baseProfile;
exports.bbox = bbox;
exports.begin$prime = begin$prime;
exports.bias = bias;
exports.by = by;
exports.calcMode = calcMode;
exports.capHeight = capHeight;
exports.class$prime = class$prime;
exports.clipPathUnits = clipPathUnits;
exports.contentScriptType = contentScriptType;
exports.contentStyleType = contentStyleType;
exports.cx = cx;
exports.cy = cy;
exports.d = d;
exports.decelerate = decelerate;
exports.descent = descent;
exports.diffuseConstant = diffuseConstant;
exports.divisor = divisor;
exports.dur = dur;
exports.dx = dx;
exports.dy = dy;
exports.edgeMode = edgeMode;
exports.elevation = elevation;
exports.end$prime = end$prime;
exports.exponent = exponent;
exports.externalResourcesRequired = externalResourcesRequired;
exports.filterRes = filterRes;
exports.filterUnits = filterUnits;
exports.format = format;
exports.from = from;
exports.fx = fx;
exports.fy = fy;
exports.g1 = g1;
exports.g2 = g2;
exports.glyphName = glyphName;
exports.glyphRef = glyphRef;
exports.gradientTransform = gradientTransform;
exports.gradientUnits = gradientUnits;
exports.hanging = hanging;
exports.height = height;
exports.horizAdvX = horizAdvX;
exports.horizOriginX = horizOriginX;
exports.horizOriginY = horizOriginY;
exports.id = id;
exports.ideographic = ideographic;
exports.in$prime = in$prime;
exports.in2 = in2;
exports.intercept = intercept;
exports.k = k;
exports.k1 = k1;
exports.k2 = k2;
exports.k3 = k3;
exports.k4 = k4;
exports.kernelMatrix = kernelMatrix;
exports.kernelUnitLength = kernelUnitLength;
exports.keyPoints = keyPoints;
exports.keySplines = keySplines;
exports.keyTimes = keyTimes;
exports.lang = lang;
exports.lengthAdjust = lengthAdjust;
exports.limitingConeAngle = limitingConeAngle;
exports.local = local;
exports.markerHeight = markerHeight;
exports.markerUnits = markerUnits;
exports.markerWidth = markerWidth;
exports.maskContentUnits = maskContentUnits;
exports.maskUnits = maskUnits;
exports.mathematical = mathematical;
exports.max = max;
exports.media = media;
exports.method$prime = method$prime;
exports.min = min;
exports.mode = mode;
exports.name = name;
exports.numOctaves = numOctaves;
exports.offset = offset;
exports.operator = operator;
exports.order = order;
exports.orient = orient;
exports.orientation = orientation;
exports.origin = origin;
exports.overlinePosition = overlinePosition;
exports.overlineThickness = overlineThickness;
exports.panose1 = panose1;
exports.path = path;
exports.pathLength = pathLength;
exports.patternContentUnits = patternContentUnits;
exports.patternTransform = patternTransform;
exports.patternUnits = patternUnits;
exports.pointOrder = pointOrder;
exports.points = points;
exports.pointsAtX = pointsAtX;
exports.pointsAtY = pointsAtY;
exports.pointsAtZ = pointsAtZ;
exports.preserveAlpha = preserveAlpha;
exports.preserveAspectRatio = preserveAspectRatio;
exports.primitiveUnits = primitiveUnits;
exports.r = r;
exports.radius = radius;
exports.refX = refX;
exports.refY = refY;
exports.renderingIntent = renderingIntent;
exports.repeatCount = repeatCount;
exports.repeatDur = repeatDur;
exports.requiredExtensions = requiredExtensions;
exports.requiredFeatures = requiredFeatures;
exports.restart = restart;
exports.result = result;
exports.rotate = rotate;
exports.rx = rx;
exports.ry = ry;
exports.scale = scale;
exports.seed = seed;
exports.slope = slope;
exports.spacing = spacing;
exports.specularConstant = specularConstant;
exports.specularExponent = specularExponent;
exports.speed = speed;
exports.spreadMethod = spreadMethod;
exports.startOffset = startOffset;
exports.stdDeviation = stdDeviation;
exports.stemh = stemh;
exports.stemv = stemv;
exports.stitchTiles = stitchTiles;
exports.strikethroughPosition = strikethroughPosition;
exports.strikethroughThickness = strikethroughThickness;
exports.string = string;
exports.style = style;
exports.surfaceScale = surfaceScale;
exports.systemLanguage = systemLanguage;
exports.tableValues = tableValues;
exports.target = target;
exports.targetX = targetX;
exports.targetY = targetY;
exports.textLength = textLength;
exports.title = title;
exports.to$prime = to$prime;
exports.transform = transform;
exports.type$prime = type$prime;
exports.u1 = u1;
exports.u2 = u2;
exports.underlinePosition = underlinePosition;
exports.underlineThickness = underlineThickness;
exports.unicode = unicode;
exports.unicodeRange = unicodeRange;
exports.unitsPerEm = unitsPerEm;
exports.vAlphabetic = vAlphabetic;
exports.vHanging = vHanging;
exports.vIdeographic = vIdeographic;
exports.vMathematical = vMathematical;
exports.values = values;
exports.version = version;
exports.vertAdvY = vertAdvY;
exports.vertOriginX = vertOriginX;
exports.vertOriginY = vertOriginY;
exports.viewBox = viewBox;
exports.viewTarget = viewTarget;
exports.width = width;
exports.widths = widths;
exports.x = x;
exports.xHeight = xHeight;
exports.x1 = x1;
exports.x2 = x2;
exports.xChannelSelector = xChannelSelector;
exports.xlinkActuate = xlinkActuate;
exports.xlinkArcrole = xlinkArcrole;
exports.xlinkHref = xlinkHref;
exports.xlinkRole = xlinkRole;
exports.xlinkShow = xlinkShow;
exports.xlinkTitle = xlinkTitle;
exports.xlinkType = xlinkType;
exports.xmlBase = xmlBase;
exports.xmlLang = xmlLang;
exports.xmlSpace = xmlSpace;
exports.y = y;
exports.y1 = y1;
exports.y2 = y2;
exports.yChannelSelector = yChannelSelector;
exports.z = z;
exports.zoomAndPan = zoomAndPan;
exports.alignmentBaseline = alignmentBaseline;
exports.baselineShift = baselineShift;
exports.clipPath = clipPath;
exports.clipRule = clipRule;
exports.clip = clip;
exports.colorInterpolationFilters = colorInterpolationFilters;
exports.colorInterpolation = colorInterpolation;
exports.colorProfile = colorProfile;
exports.colorRendering = colorRendering;
exports.color = color;
exports.cursor = cursor;
exports.direction = direction;
exports.display = display;
exports.dominantBaseline = dominantBaseline;
exports.enableBackground = enableBackground;
exports.fillOpacity = fillOpacity;
exports.fillRule = fillRule;
exports.fill = fill;
exports.filter = filter;
exports.floodColor = floodColor;
exports.floodOpacity = floodOpacity;
exports.fontFamily = fontFamily;
exports.fontSizeAdjust = fontSizeAdjust;
exports.fontSize = fontSize;
exports.fontStretch = fontStretch;
exports.fontStyle = fontStyle;
exports.fontVariant = fontVariant;
exports.fontWeight = fontWeight;
exports.glyphOrientationHorizontal = glyphOrientationHorizontal;
exports.glyphOrientationVertical = glyphOrientationVertical;
exports.imageRendering = imageRendering;
exports.kerning = kerning;
exports.letterSpacing = letterSpacing;
exports.lightingColor = lightingColor;
exports.markerEnd = markerEnd;
exports.markerMid = markerMid;
exports.markerStart = markerStart;
exports.mask = mask;
exports.opacity = opacity;
exports.overflow = overflow;
exports.pointerEvents = pointerEvents;
exports.shapeRendering = shapeRendering;
exports.stopColor = stopColor;
exports.stopOpacity = stopOpacity;
exports.strokeDasharray = strokeDasharray;
exports.strokeDashoffset = strokeDashoffset;
exports.strokeLinecap = strokeLinecap;
exports.strokeLinejoin = strokeLinejoin;
exports.strokeMiterlimit = strokeMiterlimit;
exports.strokeOpacity = strokeOpacity;
exports.strokeWidth = strokeWidth;
exports.stroke = stroke;
exports.textAnchor = textAnchor;
exports.textDecoration = textDecoration;
exports.textRendering = textRendering;
exports.unicodeBidi = unicodeBidi;
exports.visibility = visibility;
exports.wordSpacing = wordSpacing;
exports.writingMode = writingMode;
/* No side effect */
