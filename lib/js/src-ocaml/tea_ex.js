// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Tea_task = require("./tea_task.js");
var Web_window_localstorage = require("./web_window_localstorage.js");

var length = /* Task */[(function (cb) {
      var match = Web_window_localstorage.length(window);
      if (match !== undefined) {
        return Curry._1(cb, /* Ok */Block.__(0, [match]));
      } else {
        return Curry._1(cb, /* Error */Block.__(1, ["localStorage is not available"]));
      }
    })];

var clear = /* Task */[(function (cb) {
      var match = Web_window_localstorage.clear(window);
      if (match !== undefined) {
        return Curry._1(cb, /* Ok */Block.__(0, [match]));
      } else {
        return Curry._1(cb, /* Error */Block.__(1, ["localStorage is not available"]));
      }
    })];

function clearCmd(param) {
  return Tea_task.attemptOpt((function (param) {
                return undefined;
              }), clear);
}

function key(idx) {
  return /* Task */[(function (cb) {
              var match = Web_window_localstorage.key(window, idx);
              if (match !== undefined) {
                return Curry._1(cb, /* Ok */Block.__(0, [match]));
              } else {
                return Curry._1(cb, /* Error */Block.__(1, ["localStorage is not available"]));
              }
            })];
}

function getItem(key) {
  return /* Task */[(function (cb) {
              var match = Web_window_localstorage.getItem(window, key);
              if (match !== undefined) {
                return Curry._1(cb, /* Ok */Block.__(0, [match]));
              } else {
                return Curry._1(cb, /* Error */Block.__(1, ["localStorage is not available"]));
              }
            })];
}

function removeItem(key) {
  return /* Task */[(function (cb) {
              var match = Web_window_localstorage.removeItem(window, key);
              if (match !== undefined) {
                return Curry._1(cb, /* Ok */Block.__(0, [match]));
              } else {
                return Curry._1(cb, /* Error */Block.__(1, ["localStorage is not available"]));
              }
            })];
}

function removeItemCmd(key) {
  return Tea_task.attemptOpt((function (param) {
                return undefined;
              }), removeItem(key));
}

function setItem(key, value) {
  return /* Task */[(function (cb) {
              var match = Web_window_localstorage.setItem(window, key, value);
              if (match !== undefined) {
                return Curry._1(cb, /* Ok */Block.__(0, [/* () */0]));
              } else {
                return Curry._1(cb, /* Error */Block.__(1, ["localStorage is not available"]));
              }
            })];
}

function setItemCmd(key, value) {
  return Tea_task.attemptOpt((function (param) {
                return undefined;
              }), setItem(key, value));
}

var LocalStorage = /* module */[
  /* length */length,
  /* clear */clear,
  /* clearCmd */clearCmd,
  /* key */key,
  /* getItem */getItem,
  /* removeItem */removeItem,
  /* removeItemCmd */removeItemCmd,
  /* setItem */setItem,
  /* setItemCmd */setItemCmd
];

exports.LocalStorage = LocalStorage;
/* No side effect */
