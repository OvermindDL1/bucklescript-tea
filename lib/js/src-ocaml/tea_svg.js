// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Vdom = require("./vdom.js");
var Block = require("bs-platform/lib/js/block.js");

var svgNamespace = "http://www.w3.org/2000/svg";

function text(str) {
  return /* Text */Block.__(1, [str]);
}

var lazy1 = Vdom.lazyGen;

function node(tagName, keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, tagName, key, unique, props, nodes);
}

function svg(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "svg", key, unique, props, nodes);
}

function foreignObject(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "foreignObject", key, unique, props, nodes);
}

function animate(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "animate", key, unique, props, nodes);
}

function animateColor(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "animateColor", key, unique, props, nodes);
}

function animateMotion(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "animateMotion", key, unique, props, nodes);
}

function animateTransform(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "animateTransform", key, unique, props, nodes);
}

function mpath(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "mpath", key, unique, props, nodes);
}

function set(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "set", key, unique, props, nodes);
}

function a(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "a", key, unique, props, nodes);
}

function defs(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "defs", key, unique, props, nodes);
}

function g(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "g", key, unique, props, nodes);
}

function marker(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "marker", key, unique, props, nodes);
}

function mask(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "mask", key, unique, props, nodes);
}

function missingGlyph(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "missingGlyph", key, unique, props, nodes);
}

function pattern(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "pattern", key, unique, props, nodes);
}

function $$switch(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "switch", key, unique, props, nodes);
}

function symbol(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "symbol", key, unique, props, nodes);
}

function desc(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "desc", key, unique, props, nodes);
}

function metadata(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "metadata", key, unique, props, nodes);
}

function title(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "title", key, unique, props, nodes);
}

function feBlend(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "feBlend", key, unique, props, nodes);
}

function feColorMatrix(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "feColorMatrix", key, unique, props, nodes);
}

function feComponentTransfer(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "feComponentTransfer", key, unique, props, nodes);
}

function feComposite(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "feComposite", key, unique, props, nodes);
}

function feConvolveMatrix(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "feConvolveMatrix", key, unique, props, nodes);
}

function feDiffuseLighting(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "feDiffuseLighting", key, unique, props, nodes);
}

function feDisplacementMap(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "feDisplacementMap", key, unique, props, nodes);
}

function feFlood(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "feFlood", key, unique, props, nodes);
}

function feFuncA(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "feFuncA", key, unique, props, nodes);
}

function feFuncB(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "feFuncB", key, unique, props, nodes);
}

function feFuncG(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "feFuncG", key, unique, props, nodes);
}

function feFuncR(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "feFuncR", key, unique, props, nodes);
}

function feGaussianBlur(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "feGaussianBlur", key, unique, props, nodes);
}

function feImage(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "feImage", key, unique, props, nodes);
}

function feMerge(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "feMerge", key, unique, props, nodes);
}

function feMergeNode(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "feMergeNode", key, unique, props, nodes);
}

function feMorphology(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "feMorphology", key, unique, props, nodes);
}

function feOffset(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "feOffset", key, unique, props, nodes);
}

function feSpecularLighting(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "feSpecularLighting", key, unique, props, nodes);
}

function feTile(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "feTile", key, unique, props, nodes);
}

function feTurbulence(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "feTurbulence", key, unique, props, nodes);
}

function font(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "font", key, unique, props, nodes);
}

function fontFace(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "fontFace", key, unique, props, nodes);
}

function fontFaceFormat(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "fontFaceFormat", key, unique, props, nodes);
}

function fontFaceName(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "fontFaceName", key, unique, props, nodes);
}

function fontFaceSrc(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "fontFaceSrc", key, unique, props, nodes);
}

function fontFaceUri(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "fontFaceUri", key, unique, props, nodes);
}

function hkern(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "hkern", key, unique, props, nodes);
}

function vkern(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "vkern", key, unique, props, nodes);
}

function linearGradient(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "linearGradient", key, unique, props, nodes);
}

function radialGradient(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "radialGradient", key, unique, props, nodes);
}

function stop(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "stop", key, unique, props, nodes);
}

function circle(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "circle", key, unique, props, nodes);
}

function ellipse(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "ellipse", key, unique, props, nodes);
}

function svgimage(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "image", key, unique, props, nodes);
}

function line(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "line", key, unique, props, nodes);
}

function path(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "path", key, unique, props, nodes);
}

function polygon(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "polygon", key, unique, props, nodes);
}

function polyline(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "polyline", key, unique, props, nodes);
}

function rect(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "rect", key, unique, props, nodes);
}

function use(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "use", key, unique, props, nodes);
}

function feDistantLight(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "feDistantLight", key, unique, props, nodes);
}

function fePointLight(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "fePointLight", key, unique, props, nodes);
}

function feSpotLight(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "feSpotLight", key, unique, props, nodes);
}

function altGlyph(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "altGlyph", key, unique, props, nodes);
}

function altGlyphDef(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "altGlyphDef", key, unique, props, nodes);
}

function altGlyphItem(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "altGlyphItem", key, unique, props, nodes);
}

function glyph(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "glyph", key, unique, props, nodes);
}

function glyphRef(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "glyphRef", key, unique, props, nodes);
}

function textPath(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "textPath", key, unique, props, nodes);
}

function text$prime(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "text", key, unique, props, nodes);
}

function tref(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "tref", key, unique, props, nodes);
}

function tspan(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "tspan", key, unique, props, nodes);
}

function clipPath(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "clipPath", key, unique, props, nodes);
}

function svgcolorProfile(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "colorProfile", key, unique, props, nodes);
}

function cursor(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "cursor", key, unique, props, nodes);
}

function filter(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "filter", key, unique, props, nodes);
}

function script(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "script", key, unique, props, nodes);
}

function style(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "style", key, unique, props, nodes);
}

function view(keyOpt, uniqueOpt, props, nodes) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var unique = uniqueOpt !== undefined ? uniqueOpt : "";
  return Vdom.fullnode(svgNamespace, "view", key, unique, props, nodes);
}

var Cmds;

var Attributes;

var Events;

var noNode = Vdom.noNode;

exports.Cmds = Cmds;
exports.Attributes = Attributes;
exports.Events = Events;
exports.svgNamespace = svgNamespace;
exports.noNode = noNode;
exports.text = text;
exports.lazy1 = lazy1;
exports.node = node;
exports.svg = svg;
exports.foreignObject = foreignObject;
exports.animate = animate;
exports.animateColor = animateColor;
exports.animateMotion = animateMotion;
exports.animateTransform = animateTransform;
exports.mpath = mpath;
exports.set = set;
exports.a = a;
exports.defs = defs;
exports.g = g;
exports.marker = marker;
exports.mask = mask;
exports.missingGlyph = missingGlyph;
exports.pattern = pattern;
exports.$$switch = $$switch;
exports.symbol = symbol;
exports.desc = desc;
exports.metadata = metadata;
exports.title = title;
exports.feBlend = feBlend;
exports.feColorMatrix = feColorMatrix;
exports.feComponentTransfer = feComponentTransfer;
exports.feComposite = feComposite;
exports.feConvolveMatrix = feConvolveMatrix;
exports.feDiffuseLighting = feDiffuseLighting;
exports.feDisplacementMap = feDisplacementMap;
exports.feFlood = feFlood;
exports.feFuncA = feFuncA;
exports.feFuncB = feFuncB;
exports.feFuncG = feFuncG;
exports.feFuncR = feFuncR;
exports.feGaussianBlur = feGaussianBlur;
exports.feImage = feImage;
exports.feMerge = feMerge;
exports.feMergeNode = feMergeNode;
exports.feMorphology = feMorphology;
exports.feOffset = feOffset;
exports.feSpecularLighting = feSpecularLighting;
exports.feTile = feTile;
exports.feTurbulence = feTurbulence;
exports.font = font;
exports.fontFace = fontFace;
exports.fontFaceFormat = fontFaceFormat;
exports.fontFaceName = fontFaceName;
exports.fontFaceSrc = fontFaceSrc;
exports.fontFaceUri = fontFaceUri;
exports.hkern = hkern;
exports.vkern = vkern;
exports.linearGradient = linearGradient;
exports.radialGradient = radialGradient;
exports.stop = stop;
exports.circle = circle;
exports.ellipse = ellipse;
exports.svgimage = svgimage;
exports.line = line;
exports.path = path;
exports.polygon = polygon;
exports.polyline = polyline;
exports.rect = rect;
exports.use = use;
exports.feDistantLight = feDistantLight;
exports.fePointLight = fePointLight;
exports.feSpotLight = feSpotLight;
exports.altGlyph = altGlyph;
exports.altGlyphDef = altGlyphDef;
exports.altGlyphItem = altGlyphItem;
exports.glyph = glyph;
exports.glyphRef = glyphRef;
exports.textPath = textPath;
exports.text$prime = text$prime;
exports.tref = tref;
exports.tspan = tspan;
exports.clipPath = clipPath;
exports.svgcolorProfile = svgcolorProfile;
exports.cursor = cursor;
exports.filter = filter;
exports.script = script;
exports.style = style;
exports.view = view;
/* No side effect */
