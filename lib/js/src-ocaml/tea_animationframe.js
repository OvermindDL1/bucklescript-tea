// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Tea_sub = require("./tea_sub.js");

function every(keyOpt, tagger) {
  var key = keyOpt !== undefined ? keyOpt : "";
  var enableCall = function (callbacks) {
    var lastTime = {
      contents: Date.now()
    };
    var id = {
      contents: undefined
    };
    var onFrame = function (_time) {
      var time = Date.now();
      var _i = id.contents;
      if (_i === undefined) {
        return ;
      }
      var ret_delta = time < lastTime.contents ? 0.0 : time - lastTime.contents;
      var ret = {
        time: time,
        delta: ret_delta
      };
      lastTime.contents = time;
      Curry._1(callbacks.enqueue, Curry._1(tagger, ret));
      var _stillActive = id.contents;
      if (_stillActive !== undefined) {
        id.contents = window.requestAnimationFrame(onFrame);
        return ;
      }
      
    };
    id.contents = window.requestAnimationFrame(onFrame);
    return (function (param) {
        var i = id.contents;
        if (i !== undefined) {
          window.cancelAnimationFrame(i);
          id.contents = undefined;
          return ;
        }
        
      });
  };
  return Tea_sub.registration(key, enableCall);
}

function times(keyOpt, tagger) {
  var key = keyOpt !== undefined ? keyOpt : "";
  return every(undefined, (function (ev) {
                return Curry._2(tagger, key, ev.time);
              }));
}

function diffs(keyOpt, tagger) {
  var key = keyOpt !== undefined ? keyOpt : "";
  return every(undefined, (function (ev) {
                return Curry._2(tagger, key, ev.delta);
              }));
}

exports.every = every;
exports.times = times;
exports.diffs = diffs;
/* No side effect */
